"use strict";function _toConsumableArray(t){return _arrayWithoutHoles(t)||_iterableToArray(t)||_unsupportedIterableToArray(t)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(t,e){if(t){if("string"==typeof t)return _arrayLikeToArray(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Map"===(r="Object"===r&&t.constructor?t.constructor.name:r)||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(t,e):void 0}}function _iterableToArray(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}function _arrayWithoutHoles(t){if(Array.isArray(t))return _arrayLikeToArray(t)}function _arrayLikeToArray(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,o=new Array(e);r<e;r++)o[r]=t[r];return o}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function _createClass(t,e,r){return e&&_defineProperties(t.prototype,e),r&&_defineProperties(t,r),t}var ScrollSpy=function(){function t(){_classCallCheck(this,t),this.targets={},this.targets.nodes=this.getTargetNodes().sort(function(t,e){return t.offsetTop-e.offsetTop}),this.targets.positions=this.getTargetPositions(),this.targets.anchors=this.getAnchorNodes(),this.navHeight=document.querySelector(".nav").offsetHeight,window.addEventListener("scroll",this.setSpy.bind(this))}return _createClass(t,[{key:"getTargetNodes",value:function(){var t=this.getAnchors(),t=this.prepareAnchors(t);return _toConsumableArray(document.querySelectorAll(t))}},{key:"getAnchors",value:function(){return Array.from(document.querySelectorAll(".nav__list--mobile [target-anchor]")).map(function(t){return t.getAttribute("target-anchor")})}},{key:"prepareAnchors",value:function(t){return t.map(function(t){return"#".concat(t)}).join(",")}},{key:"getTargetPositions",value:function(){return this.targets.nodes.map(function(t){return t.offsetTop})}},{key:"getAnchorNodes",value:function(){var e=[];return this.targets.nodes.forEach(function(t){e.push(document.querySelectorAll("[target-anchor=".concat(t.id,"]")))}),e}},{key:"setSpy",value:function(){for(var t,e=0;e<this.targets.positions.length;e++)this.checkTarget(this.targets.positions[e])&&(t=e);void 0!==t?this.setStyle(this.targets.anchors[t]):this.resetStyle()}},{key:"checkTarget",value:function(t){return t-this.navHeight<window.scrollY}},{key:"setStyle",value:function(t){this.oldItems?t!=this.oldItems&&(this.oldItems.forEach(function(t){return t.style.backgroundColor=""}),(this.oldItems=t).forEach(function(t){return t.style.backgroundColor="rgba(54, 167, 23, 0.2)"})):(this.oldItems=t).forEach(function(t){return t.style.backgroundColor="rgba(54, 167, 23, 0.2)"})}},{key:"resetStyle",value:function(){this.oldItems&&(this.oldItems.forEach(function(t){return t.style.backgroundColor=""}),this.oldItems=void 0)}}]),t}();new ScrollSpy;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcm9sbC1zcHkuanMiXSwibmFtZXMiOlsiU2Nyb2xsU3B5IiwiX2NsYXNzQ2FsbENoZWNrIiwidGhpcyIsInRhcmdldHMiLCJub2RlcyIsImdldFRhcmdldE5vZGVzIiwic29ydCIsImEiLCJiIiwib2Zmc2V0VG9wIiwicG9zaXRpb25zIiwiZ2V0VGFyZ2V0UG9zaXRpb25zIiwiYW5jaG9ycyIsImdldEFuY2hvck5vZGVzIiwibmF2SGVpZ2h0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwib2Zmc2V0SGVpZ2h0Iiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsInNldFNweSIsImJpbmQiLCJnZXRBbmNob3JzIiwic2VsZWN0b3IiLCJwcmVwYXJlQW5jaG9ycyIsIl90b0NvbnN1bWFibGVBcnJheSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJBcnJheSIsImZyb20iLCJtYXAiLCJlbCIsImdldEF0dHJpYnV0ZSIsImNvbmNhdCIsImpvaW4iLCJmb3JFYWNoIiwicHVzaCIsImlkIiwibWF4IiwiaSIsImxlbmd0aCIsInVuZGVmaW5lZCIsInNldFN0eWxlIiwiaXRlbSIsInNjcm9sbFkiLCJpdGVtcyIsIm9sZEl0ZW1zIiwic3R5bGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJjaGVja1RhcmdldCJdLCJtYXBwaW5ncyI6InkzQ0FBTUEsVSxXQUNGLFNBQUFBLElBQWNDLGdCQUFBQyxLQUFBRixHQUNWRSxLQUFLQyxRQUFVLEdBQ2ZELEtBQUtDLFFBQVFDLE1BQVNGLEtBQUtHLGlCQUFpQkMsS0FBTSxTQUFDQyxFQUFHQyxHQUFKLE9BQVVELEVBQUVFLFVBQVlELEVBQUVDLFlBQzVFUCxLQUFLQyxRQUFRTyxVQUFZUixLQUFLUyxxQkFDOUJULEtBQUtDLFFBQVFTLFFBQVVWLEtBQUtXLGlCQUM1QlgsS0FBS1ksVUFBWUMsU0FBU0MsY0FBYyxRQUFRQyxhQUNoREMsT0FBT0MsaUJBQWlCLFNBQVVqQixLQUFLa0IsT0FBT0MsS0FBS25CLE8sbURBR3ZELFdBQ0ksSUFBTVUsRUFBVVYsS0FBS29CLGFBRWZDLEVBQVdyQixLQUFLc0IsZUFBZVosR0FDckMsT0FBQWEsbUJBQVdWLFNBQVNXLGlCQUFpQkgsTSx3QkFHekMsV0FDSSxPQUFPSSxNQUFNQyxLQUFLYixTQUFTVyxpQkFBaUIsdUNBQXVDRyxJQUFLLFNBQUFDLEdBQUUsT0FBSUEsRUFBR0MsYUFBYSxxQiw0QkFqQmxILFNBQUFuQixHQUFjLE9BQUFBLEVBQUFpQixJQUFBLFNBQUFDLEdBQUEsTUFBQSxJQUFBRSxPQUFBRixLQUFBRyxLQUFBLE8sZ0NBRVYsV0FBa0QsT0FBWXhCLEtBQUFBLFFBQWFMLE1BQUNLLElBQTFCLFNBQUFxQixHQUFBLE9BQUFBLEVBQUFyQixjLDRCQUVsRCxXQUNBLElBQUtLLEVBQVlDLEdBOEJqQixPQTVCSGIsS0FBQUMsUUFBQUMsTUFBQThCLFFBQUEsU0FBQUosR0F5Qk9sQixFQUFRdUIsS0FBS3BCLFNBQVNXLGlCQUFULGtCQUFBTSxPQUE0Q0YsRUFBR00sR0FBL0MsU0F2QnJCeEIsSSxvQkErQkEsV0FFSSxJQURBLElBQUl5QixFQXpCUkMsRUFBQSxFQUFBQSxFQUFBcEMsS0FBYUMsUUFBQU8sVUFBQTZCLE9BQUFELElBQ0ZYLEtBQU1DLFlBQWExQixLQUFDd0IsUUFBQUEsVUFBaUJZLE1BQWtEUixFQUFHQyxRQThCckZTLElBQVJILEVBQ0FuQyxLQUFLdUMsU0FBU3ZDLEtBQUtDLFFBQVFTLFFBQVF5QixJQTNCdkNuQyxLQUFPVSxlLHlCQWlDWCxTQUFZOEIsR0FDUixPQUFRQSxFQUFPeEMsS0FBS1ksVUFBWUksT0FBT3lCLFUsc0JBOUJOLFNBQUFDLEdBQ3BDMUMsS0FBQTJDLFNBTU9qQyxHQUFBVixLQUFhYSxXQURqQmIsS0FBQTJDLFNBQUFYLFFBQUEsU0FBQVEsR0FBQSxPQUFBQSxFQUFBSSxNQUFBQyxnQkFBQSxNQUlBN0MsS0FBT1UsU0FBUGdDLEdBRUhWLFFBQUEsU0FBQVEsR0FBQSxPQUFBQSxFQUFBSSxNQUFBQyxnQkFBQSw2QkF3Qk83QyxLQUFLMkMsU0FBV0QsR0FDVlYsUUFBUSxTQUFBUSxHQUFJLE9BQUlBLEVBQUtJLE1BQU1DLGdCQUFrQiw2Qix3QkFZM0QsV0FoQ1M3QyxLQUFLMkMsV0FDSDNDLEtBQUs4QyxTQUFBQSxRQUFpQjdDLFNBQUFBLEdBQUFBLE9BQVFPLEVBQUFBLE1BQWJxQyxnQkFBNEIsS0FDNUNWLEtBQUFRLGNBQUFMLE8sS0FJSixJQUFBeEMiLCJmaWxlIjoic2Nyb2xsLXNweS5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBTY3JvbGxTcHkge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnRhcmdldHMgPSB7fTtcbiAgICAgICAgdGhpcy50YXJnZXRzLm5vZGVzID0gIHRoaXMuZ2V0VGFyZ2V0Tm9kZXMoKS5zb3J0KCAoYSwgYikgPT4gYS5vZmZzZXRUb3AgLSBiLm9mZnNldFRvcCk7XG4gICAgICAgIHRoaXMudGFyZ2V0cy5wb3NpdGlvbnMgPSB0aGlzLmdldFRhcmdldFBvc2l0aW9ucygpO1xuICAgICAgICB0aGlzLnRhcmdldHMuYW5jaG9ycyA9IHRoaXMuZ2V0QW5jaG9yTm9kZXMoKTtcbiAgICAgICAgdGhpcy5uYXZIZWlnaHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmF2Jykub2Zmc2V0SGVpZ2h0O1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdGhpcy5zZXRTcHkuYmluZCh0aGlzKSk7XG4gICAgfVxuXG4gICAgZ2V0VGFyZ2V0Tm9kZXMoKSB7XG4gICAgICAgIGNvbnN0IGFuY2hvcnMgPSB0aGlzLmdldEFuY2hvcnMoKTsgXG5cbiAgICAgICAgY29uc3Qgc2VsZWN0b3IgPSB0aGlzLnByZXBhcmVBbmNob3JzKGFuY2hvcnMpO1xuICAgICAgICByZXR1cm4gWy4uLmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpXTtcbiAgICB9XG5cbiAgICBnZXRBbmNob3JzKCkge1xuICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubmF2X19saXN0LS1tb2JpbGUgW3RhcmdldC1hbmNob3JdJykpLm1hcCggZWwgPT4gZWwuZ2V0QXR0cmlidXRlKCd0YXJnZXQtYW5jaG9yJykpO1xuICAgIH1cblxuICAgIHByZXBhcmVBbmNob3JzKGFuY2hvcnMpIHtcbiAgICAgICAgcmV0dXJuIGFuY2hvcnMubWFwKGVsID0+IGAjJHtlbH1gKS5qb2luKCcsJyk7XG4gICAgfVxuXG4gICAgZ2V0VGFyZ2V0UG9zaXRpb25zKCkge1xuICAgICAgICByZXR1cm4gdGhpcy50YXJnZXRzLm5vZGVzLm1hcCggZWwgPT4gZWwub2Zmc2V0VG9wIClcbiAgICB9XG5cbiAgICBnZXRBbmNob3JOb2RlcygpIHtcbiAgICAgICAgY29uc3QgYW5jaG9ycyA9IFtdO1xuXG4gICAgICAgIHRoaXMudGFyZ2V0cy5ub2Rlcy5mb3JFYWNoKCBlbCA9PiB7XG4gICAgICAgICAgICBhbmNob3JzLnB1c2goZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChgW3RhcmdldC1hbmNob3I9JHtlbC5pZH1dYCkpO1xuICAgICAgICB9KVxuXG4gICAgICAgIHJldHVybiBhbmNob3JzO1xuXG4gICAgfVxuXG5cbiAgICBzZXRTcHkoKSB7XG4gICAgICAgIGxldCBtYXg7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgIHRoaXMudGFyZ2V0cy5wb3NpdGlvbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmKHRoaXMuY2hlY2tUYXJnZXQodGhpcy50YXJnZXRzLnBvc2l0aW9uc1tpXSkpIHtcbiAgICAgICAgICAgICAgICBtYXggPSBpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChtYXggIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5zZXRTdHlsZSh0aGlzLnRhcmdldHMuYW5jaG9yc1ttYXhdKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucmVzZXRTdHlsZSgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgY2hlY2tUYXJnZXQoaXRlbSkge1xuICAgICAgICByZXR1cm4gKGl0ZW0gLSB0aGlzLm5hdkhlaWdodCA8IHdpbmRvdy5zY3JvbGxZKTtcbiAgICB9XG5cbiAgICBzZXRTdHlsZShpdGVtcykge1xuICAgICAgICBcbiAgICAgICAgaWYoIXRoaXMub2xkSXRlbXMpIHtcbiAgICAgICAgICAgIHRoaXMub2xkSXRlbXMgPSBpdGVtcztcbiAgICAgICAgICAgIGl0ZW1zLmZvckVhY2goaXRlbSA9PiBpdGVtLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwicmdiYSg1NCwgMTY3LCAyMywgMC4yKVwiKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmKGl0ZW1zICE9IHRoaXMub2xkSXRlbXMpIHtcbiAgICAgICAgICAgIHRoaXMub2xkSXRlbXMuZm9yRWFjaChpdGVtID0+IGl0ZW0uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJycpO1xuICAgICAgICAgICAgdGhpcy5vbGRJdGVtcyA9IGl0ZW1zO1xuICAgICAgICAgICAgaXRlbXMuZm9yRWFjaChpdGVtID0+IGl0ZW0uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJyZ2JhKDU0LCAxNjcsIDIzLCAwLjIpXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVzZXRTdHlsZSgpIHtcbiAgICAgICAgaWYodGhpcy5vbGRJdGVtcykge1xuICAgICAgICAgICAgdGhpcy5vbGRJdGVtcy5mb3JFYWNoKGl0ZW0gPT4gaXRlbS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAnJyk7XG4gICAgICAgICAgICB0aGlzLm9sZEl0ZW1zID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5uZXcgU2Nyb2xsU3B5KCk7Il19
